name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install root dependencies
      run: npm install

    - name: Install service dependencies
      run: |
        cd customer-service && npm install
        cd ../product-service && npm install
        cd ../order-service && npm install
        cd ../payment-service && npm install
        cd ../transaction-worker && npm install
        cd ../scripts && npm install
        cd ../integration-tests && npm install

    - name: Build services
      run: |
        cd customer-service && npm run build
        cd ../product-service && npm run build
        cd ../order-service && npm run build
        cd ../payment-service && npm run build
        cd ../transaction-worker && npm run build

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Start services with Docker Compose
      run: |
        docker-compose up -d
        sleep 60  # Wait for services to be ready

    - name: Wait for services to be healthy
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:3001/health && curl -f http://localhost:3002/health && curl -f http://localhost:3003/health && curl -f http://localhost:3004/health; do sleep 5; done'

    - name: Seed database
      run: |
        docker-compose run --rm seed-databases

    - name: Run all tests
      run: npm test

    - name: Stop services
      if: always()
      run: docker-compose down

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          customer-service/coverage/
          product-service/coverage/
          order-service/coverage/
          payment-service/coverage/
          transaction-worker/coverage/
          integration-tests/coverage/
