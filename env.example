# =============================================================================
# E-COMMERCE MICROSERVICES ENVIRONMENT VARIABLES
# =============================================================================
# Copy this file to .env and update the values according to your environment
# 
# For Docker setup: Most values are already configured in docker-compose.yml
# For Local setup: Update these values to match your local environment
# =============================================================================

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Configuration
MONGO_URI=mongodb://admin:password123@localhost:27017/ecommerce?authSource=admin
MONGO_HOST=localhost
MONGO_PORT=27017
MONGO_USERNAME=admin
MONGO_PASSWORD=password123
MONGO_DATABASE=ecommerce
MONGO_AUTH_SOURCE=admin

# =============================================================================
# RABBITMQ CONFIGURATION
# =============================================================================

# RabbitMQ Connection
RABBITMQ_URL=amqp://admin:password123@localhost:5672
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
RABBITMQ_USERNAME=admin
RABBITMQ_PASSWORD=password123
RABBITMQ_VHOST=/

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Service Ports
CUSTOMER_SERVICE_PORT=3001
PRODUCT_SERVICE_PORT=3002
ORDER_SERVICE_PORT=3003
PAYMENT_SERVICE_PORT=3004

# Service URLs (for inter-service communication)
CUSTOMER_SERVICE_URL=http://localhost:3001
PRODUCT_SERVICE_URL=http://localhost:3002
ORDER_SERVICE_URL=http://localhost:3003
PAYMENT_SERVICE_URL=http://localhost:3004

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=development
PORT=3001

# Logging
LOG_LEVEL=info
LOG_FORMAT=json

# =============================================================================
# CURRENCY & LOCALIZATION
# =============================================================================

# Default Currency (Nigerian Naira)
DEFAULT_CURRENCY=NGN
DEFAULT_LOCALE=en-NG

# Money Validation
MIN_AMOUNT=100
MAX_AMOUNT=10000000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret (for future authentication)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=24h

# API Keys (for external services)
PAYMENT_GATEWAY_API_KEY=your-payment-gateway-api-key
PAYMENT_GATEWAY_SECRET=your-payment-gateway-secret

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Payment Gateway Configuration
PAYMENT_GATEWAY_URL=https://api.payment-gateway.com
PAYMENT_GATEWAY_TIMEOUT=30000

# Email Service (for notifications)
EMAIL_SERVICE_URL=https://api.email-service.com
EMAIL_API_KEY=your-email-service-api-key

# SMS Service (for notifications)
SMS_SERVICE_URL=https://api.sms-service.com
SMS_API_KEY=your-sms-service-api-key

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

# Test Database
TEST_MONGO_URI=mongodb://admin:password123@localhost:27017/ecommerce_test?authSource=admin

# Test Service URLs
TEST_CUSTOMER_SERVICE_URL=http://localhost:3001
TEST_PRODUCT_SERVICE_URL=http://localhost:3002
TEST_ORDER_SERVICE_URL=http://localhost:3003
TEST_PAYMENT_SERVICE_URL=http://localhost:3004

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose Environment
COMPOSE_PROJECT_NAME=ecommerce-microservices
COMPOSE_BAKE=true

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Hot Reload
NODEMON_ENABLED=true
NODEMON_WATCH=src
NODEMON_EXT=ts,js,json

# TypeScript
TSC_WATCH=true

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================

# Production Environment Variables
# Uncomment and update for production deployment

# NODE_ENV=production
# LOG_LEVEL=warn
# MONGO_URI=mongodb://production-user:secure-password@production-mongo:27017/ecommerce_prod?authSource=admin
# RABBITMQ_URL=amqp://production-user:secure-password@production-rabbitmq:5672
# JWT_SECRET=super-secure-production-jwt-secret-key
# PAYMENT_GATEWAY_API_KEY=production-payment-gateway-api-key
# PAYMENT_GATEWAY_SECRET=production-payment-gateway-secret

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. For Docker setup: Most values are automatically configured in docker-compose.yml
# 2. For Local setup: Update the URLs to use localhost instead of service names
# 3. For Production: Use strong passwords and secure API keys
# 4. Never commit .env files to version control
# 5. Use different databases for development, testing, and production
# 6. Update CORS settings for production domains
# 7. Configure proper SSL certificates for production
# 8. Set up monitoring and logging for production
# 
# =============================================================================
